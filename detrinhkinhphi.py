import streamlit as st
import pandas as pd
import io

st.set_page_config(page_title="Phi·∫øu ƒë·ªÅ ngh·ªã thanh to√°n", layout="wide")

# ===== H√†m rerun an to√†n =====
def safe_rerun():
    # S·ª≠ d·ª•ng st.rerun() ƒë·ªÉ l√†m m·ªõi ·ª©ng d·ª•ng
    if hasattr(st, "rerun"):
        st.rerun()
    elif hasattr(st, "experimental_rerun"):
        st.experimental_rerun()

# ===== H√†m ƒë·ªãnh d·∫°ng ti·ªÅn t·ªá =====
def format_currency(value):
    """ƒê·ªãnh d·∫°ng gi√° tr·ªã s·ªë th√†nh chu·ªói ti·ªÅn t·ªá (v√≠ d·ª•: 1000000 -> 1,000,000)."""
    try:
        # Lo·∫°i b·ªè d·∫•u ph·∫©y (,) v√† kho·∫£ng tr·∫Øng, sau ƒë√≥ chuy·ªÉn sang float
        value = float(str(value).replace(",", "").strip())
        # ƒê·ªãnh d·∫°ng l·∫°i v·ªõi d·∫•u ph·∫©y ph√¢n c√°ch h√†ng ngh√¨n
        return f"{value:,.0f}"
    except:
        return value

# ===== Kh·ªüi t·∫°o session =====
if "table1" not in st.session_state:
    st.session_state.table1 = []
if "table2" not in st.session_state:
    st.session_state.table2 = []

st.title("üìÑ PHI·∫æU ƒê·ªÄ NGH·ªä THANH TO√ÅN")

# ============================================================
# TH√îNG TIN D·ª∞ √ÅN
# ============================================================
st.markdown("### üèóÔ∏è Th√¥ng tin d·ª± √°n")
col1, col2, col3, col4 = st.columns(4)
with col1:
    ma_du_an = st.text_input("M√£ d·ª± √°n")
with col2:
    ten_du_an = st.text_input("T√™n d·ª± √°n")
with col3:
    ngay_de_xuat = st.date_input("Ng√†y ƒë·ªÅ xu·∫•t")
with col4:
    stk_nhan = st.text_input("S·ªë t√†i kho·∫£n nh·∫≠n ti·ªÅn")

# ============================================================
# B·∫¢NG 1: ƒê·ªÅ ngh·ªã thanh to√°n chi ti·∫øt
# ============================================================
st.markdown("### B·∫£ng üßæ1: ƒê·ªÅ ngh·ªã thanh to√°n chi ti·∫øt")

col1, col2, col3, col4, col5 = st.columns([2, 1, 1, 1, 2])
with col1:
    mota = st.text_input("M√¥ t·∫£")
with col2:
    donvi = st.text_input("ƒê∆°n v·ªã")
with col3:
    soluong = st.number_input("S·ªë l∆∞·ª£ng", min_value=0.0, step=1.0)
with col4:
    dongia_raw = st.text_input("ƒê∆°n gi√°", key="dongia_raw")
    dongia_formatted = format_currency(dongia_raw)
    st.caption(f"üí∞ {dongia_formatted if dongia_formatted else ''}")
with col5:
    ghichu1 = st.text_input("Ghi ch√∫")

if st.button("‚ûï Th√™m d√≤ng v√†o b·∫£ng 1", key="add_row_1"):
    try:
        # X·ª≠ l√Ω ValueError ·ªü ƒë√¢y ƒë·ªÉ tr√°nh l·ªói n·∫øu dongia_raw kh√¥ng ph·∫£i l√† s·ªë
        dongia_value = float(str(dongia_raw).replace(",", ""))
        total = dongia_value * soluong
        st.session_state.table1.append({
            "M√¥ t·∫£": mota,
            "ƒê∆°n v·ªã": donvi,
            "S·ªë l∆∞·ª£ng": soluong,
            "ƒê∆°n gi√°": format_currency(dongia_raw),
            "T·ªïng": format_currency(total),
            "Ghi ch√∫": ghichu1
        })
        safe_rerun()
    except ValueError:
        st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë∆°n gi√° h·ª£p l·ªá (ch·ªâ s·ªë).")

if st.session_state.table1:
    st.markdown("#### üìã Danh s√°ch chi ti·∫øt thanh to√°n")
    
    # Hi·ªÉn th·ªã ti√™u ƒë·ªÅ c·ªôt (B·ªï sung c·ªôt Stt)
    header_cols = st.columns([0.5, 2, 1, 1, 1, 2, 0.3])
    headers = ["Stt", "M√¥ t·∫£", "ƒê∆°n v·ªã", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "T·ªïng", ""]
    for i, header in enumerate(headers):
        header_cols[i].markdown(f"**{header}**")

    # Hi·ªÉn th·ªã d·ªØ li·ªáu (B·ªï sung c·ªôt Stt)
    for i, row in enumerate(st.session_state.table1):
        cols = st.columns([0.5, 2, 1, 1, 1, 2, 0.3])
        cols[0].write(i + 1)  # Stt
        cols[1].write(row["M√¥ t·∫£"])
        cols[2].write(row["ƒê∆°n v·ªã"])
        cols[3].write(row["S·ªë l∆∞·ª£ng"])
        cols[4].write(row["ƒê∆°n gi√°"])
        cols[5].write(row["T·ªïng"])
        if cols[6].button("‚ùå", key=f"del1_{i}"):
            st.session_state.table1.pop(i)
            safe_rerun()

    # T√≠nh t·ªïng c·ªông
    total_sum = sum(float(str(r["T·ªïng"]).replace(",", "")) for r in st.session_state.table1 if r.get("T·ªïng"))

    st.markdown(f"**T·ªïng c·ªông:** üí∞ {format_currency(total_sum)}")

# ============================================================
# B·∫¢NG 2: Theo d√µi thanh to√°n
# ============================================================
st.markdown("### B·∫£ng üí∞2: Theo d√µi thanh to√°n")

col1, col2, col3, col4, col5 = st.columns([1.5, 1.5, 1.5, 1.5, 2])
with col1:
    goi = st.text_input("G√≥i")
with col2:
    dutoan_raw = st.text_input("D·ª± to√°n (nh·∫≠p s·ªë)", key="dutoan_raw")
    st.caption(f"üí∞ {format_currency(dutoan_raw) if dutoan_raw else ''}")
with col3:
    dachi_raw = st.text_input("ƒê√£ chi (nh·∫≠p s·ªë)", key="dachi_raw")
    st.caption(f"üí∞ {format_currency(dachi_raw) if dachi_raw else ''}")
with col4:
    dexuat_raw = st.text_input("ƒê·ªÅ xu·∫•t chi tu·∫ßn n√†y (nh·∫≠p s·ªë)", key="dexuat_raw")
    st.caption(f"üí∞ {format_currency(dexuat_raw) if dexuat_raw else ''}")
with col5:
    ghichu2 = st.text_input("Ghi ch√∫ (b·∫£ng 2)")

if st.button("‚ûï Th√™m d√≤ng v√†o b·∫£ng 2", key="add_row_2"):
    try:
        # Ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa t·∫•t c·∫£ 3 tr∆∞·ªùng nh·∫≠p li·ªáu s·ªë
        dutoan_value = float(str(dutoan_raw).replace(",", ""))
        dachi_value = float(str(dachi_raw).replace(",", ""))
        dexuat_value = float(str(dexuat_raw).replace(",", ""))
        
        # T√çNH TO√ÅN C·ªòT "C√íN L·∫†I"
        con_lai_value = dutoan_value - dachi_value - dexuat_value
        
        st.session_state.table2.append({
            "G√≥i": goi,
            "D·ª± to√°n": format_currency(dutoan_raw),
            "ƒê√£ chi": format_currency(dachi_raw),
            "ƒê·ªÅ xu·∫•t chi tu·∫ßn n√†y": format_currency(dexuat_raw),
            "C√≤n l·∫°i": format_currency(con_lai_value), # Th√™m c·ªôt C√≤n l·∫°i
            "Ghi ch√∫": ghichu2
        })
        safe_rerun()
    except ValueError:
        st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë ti·ªÅn cho D·ª± to√°n/ƒê√£ chi/ƒê·ªÅ xu·∫•t chi.")

if st.session_state.table2:
    st.markdown("#### üìã Danh s√°ch theo d√µi thanh to√°n")
    
    # Hi·ªÉn th·ªã ti√™u ƒë·ªÅ c·ªôt (B·ªï sung c·ªôt Stt v√† C√≤n l·∫°i)
    # 8 c·ªôt: Stt, G√≥i, D·ª± to√°n, ƒê√£ chi, ƒê·ªÅ xu·∫•t, C√≤n l·∫°i, Ghi ch√∫, X
    header_cols = st.columns([0.4, 1.3, 1.3, 1.3, 1.3, 1.3, 2.5, 0.3]) 
    headers = ["Stt", "G√≥i", "D·ª± to√°n", "ƒê√£ chi", "ƒê·ªÅ xu·∫•t chi tu·∫ßn n√†y", "C√≤n l·∫°i", "Ghi ch√∫", ""]
    for i, header in enumerate(headers):
        header_cols[i].markdown(f"**{header}**")
        
    # Hi·ªÉn th·ªã d·ªØ li·ªáu (B·ªï sung c·ªôt Stt v√† C√≤n l·∫°i)
    for i, row in enumerate(st.session_state.table2):
        # 8 c·ªôt
        cols = st.columns([0.4, 1.3, 1.3, 1.3, 1.3, 1.3, 2.5, 0.3]) 
        cols[0].write(i + 1) # Stt
        cols[1].write(row["G√≥i"])
        cols[2].write(row["D·ª± to√°n"])
        cols[3].write(row["ƒê√£ chi"])
        cols[4].write(row["ƒê·ªÅ xu·∫•t chi tu·∫ßn n√†y"])
        cols[5].write(row["C√≤n l·∫°i"]) # D·ªØ li·ªáu c·ªôt C√≤n l·∫°i
        cols[6].write(row["Ghi ch√∫"])
        if cols[7].button("‚ùå", key=f"del2_{i}"):
            st.session_state.table2.pop(i)
            safe_rerun()

# ============================================================
# PH·∫¶N PH√ä DUY·ªÜT
# ============================================================
st.markdown("### ‚úçÔ∏è Ph·∫ßn ph√™ duy·ªát")

col1, col2, col3 = st.columns(3)
with col1:
    nguoi_lap = st.text_input("Ng∆∞·ªùi ƒë·ªÅ ngh·ªã (CTY/DA)")
    nguoi_kiemtra1 = st.text_input("Ng∆∞·ªùi ki·ªÉm (CTY/DA)")
with col2:
    nguoi_duyet1 = st.text_input("Ng∆∞·ªùi duy·ªát (CTY/DA)")
    nguoi_kiemtra2 = st.text_input("Ng∆∞·ªùi ki·ªÉm (HO)")
with col3:
    ke_toan = st.text_input("K·∫ø to√°n tr∆∞·ªüng (HO)")
    giam_doc = st.text_input("Gi√°m ƒë·ªëc ph√™ duy·ªát (HO)")

# ============================================================
# XU·∫§T HTML + XEM TR∆Ø·ªöC + XU·∫§T PDF
# ============================================================
st.markdown("### üì§ Xu·∫•t t√†i li·ªáu & Xem tr∆∞·ªõc")

def generate_html():
    """T·∫°o chu·ªói HTML ho√†n ch·ªânh cho phi·∫øu ƒë·ªÅ ngh·ªã thanh to√°n v·ªõi CSS ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a cho in ·∫•n."""
    
    # B·∫£ng 1: T·∫°o DataFrame v√† chuy·ªÉn sang HTML (B·ªï sung Stt)
    df1 = pd.DataFrame(st.session_state.table1)
    if not df1.empty:
        df1.insert(0, 'Stt', range(1, 1 + len(df1))) # Th√™m c·ªôt Stt
        columns_order_1 = ["Stt", "M√¥ t·∫£", "ƒê∆°n v·ªã", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "T·ªïng", "Ghi ch√∫"]
        df1_html = df1[columns_order_1].to_html(index=False)
    else:
        df1_html = ""

    # B·∫£ng 2: T·∫°o DataFrame v√† chuy·ªÉn sang HTML (B·ªï sung Stt v√† C√≤n l·∫°i)
    df2 = pd.DataFrame(st.session_state.table2)
    if not df2.empty:
        df2.insert(0, 'Stt', range(1, 1 + len(df2))) # Th√™m c·ªôt Stt
        columns_order_2 = ["Stt", "G√≥i", "D·ª± to√°n", "ƒê√£ chi", "ƒê·ªÅ xu·∫•t chi tu·∫ßn n√†y", "C√≤n l·∫°i", "Ghi ch√∫"] # C·ªôt C√≤n l·∫°i ƒë∆∞·ª£c th√™m
        df2_html = df2[columns_order_2].to_html(index=False)
    else:
        df2_html = ""
    
    # T√≠nh T·ªïng c·ªông
    total_sum = sum(float(str(r["T·ªïng"]).replace(",", "")) for r in st.session_state.table1 if r.get("T·ªïng"))
    total_sum_formatted = format_currency(total_sum)
    
    html = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>Phi·∫øu ƒê·ªÅ Ngh·ªã Thanh To√°n</title>
        <style>
        /* CSS cho in ·∫•n (PDF) */
        /* ƒê√£ s·ª≠a: Thi·∫øt l·∫≠p kh·ªï A4 n·∫±m ngang v√† gi·∫£m margin t·ªëi ƒëa ƒë·ªÉ fit 1 trang */
        @page {{ size: A4 landscape; margin: 5mm; }} 
        body {{
            font-family: DejaVu Sans, Arial, sans-serif; /* H·ªó tr·ª£ ti·∫øng Vi·ªát */
            font-size: 12px; /* Gi·∫£m t·ª´ 14px */
            margin: 0;
            padding: 0;
        }}
        h2 {{
            text-align: center;
            margin: 10px 0 15px 0; /* Gi·∫£m margin */
            font-size: 18px; /* Gi·∫£m size */
        }}
        h3 {{
            text-align: left;
            margin: 15px 0 8px 0; /* Gi·∫£m margin */
            font-size: 14px; /* Gi·∫£m size */
        }}
        /* Th√¥ng tin Header */
        .header-info {{
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 5px; /* Gi·∫£m kho·∫£ng c√°ch */
            margin-bottom: 10px; /* Gi·∫£m margin */
            font-size: 12px; /* Gi·∫£m size */
        }}
        /* B·∫£ng */
        table {{
            border-collapse: collapse;
            width: 100%;
            margin-top: 5px; /* Gi·∫£m margin */
        }}
        th, td {{
            border: 1px solid #000;
            padding: 4px; /* Gi·∫£m padding */
            text-align: center;
            font-size: 10px; /* Gi·∫£m t·ª´ 12px */
            line-height: 1.2;
        }}
        th {{
            background-color: #e0e0e0;
            font-weight: bold;
        }}
        /* ƒê·∫£m b·∫£o c·ªôt M√¥ t·∫£/G√≥i cƒÉn tr√°i */
        td:nth-child(2), th:nth-child(2) {{ 
            text-align: left; 
        }}
        /* ƒê·∫£m b·∫£o c·ªôt Stt cƒÉn gi·ªØa */
        td:nth-child(1), th:nth-child(1) {{ 
            text-align: center; 
        }}

        .total-row {{
            margin-top: 8px; /* Gi·∫£m margin */
            font-weight: bold;
            font-size: 12px;
            text-align: right;
            padding-right: 5px;
        }}
        /* B·∫£ng ch·ªØ k√Ω */
        .signature-table {{
            width: 100%;
            border-collapse: collapse;
            margin-top: 25px; /* Gi·∫£m margin */
            font-size: 10px; /* Gi·∫£m size */
            border: none;
        }}
        .signature-table th, .signature-table td {{
            border: 1px solid #000;
            text-align: center;
            padding: 5px 3px; /* Gi·∫£m padding */
            line-height: 1.1;
        }}
        .signature-table th {{
            vertical-align: top;
        }}
        .signature-table td {{
            vertical-align: bottom; /* ƒê·∫£m b·∫£o cƒÉn d∆∞·ªõi c√πng */
            height: 100px; /* Gi·∫£m t·ª´ 120px */
            padding-bottom: 5px;
        }}
        .signature-header th {{
            background-color: #f2f2f2;
            font-weight: bold;
        }}
        .signature-title {{
            text-align: center;
            font-weight: bold;
            padding: 0px;
        }}
        .signature-name {{
            font-weight: bold;
            font-style: italic;
            margin-top: 5px;
        }}
        .signature-date {{
            font-style: italic;
            font-size: 9px;
            padding-top: 2px;
        }}
        </style>
    </head>
    <body>
        <h2>PHI·∫æU ƒê·ªÄ NGH·ªä THANH TO√ÅN</h2>
        
        <div class="header-info">
            <div><b>M√£ d·ª± √°n:</b> {ma_du_an}</div>
            <div><b>T√™n d·ª± √°n:</b> {ten_du_an}</div>
            <div><b>Ng√†y ƒë·ªÅ xu·∫•t:</b> {ngay_de_xuat}</div>
            <div><b>S·ªë TK nh·∫≠n ti·ªÅn:</b> {stk_nhan}</div>
        </div>

        <h3>1. ƒê·ªÅ ngh·ªã thanh to√°n chi ti·∫øt</h3>
        {df1_html}
        <p class="total-row"><b>T·ªïng c·ªông:</b> üí∞ {total_sum_formatted}</p>

        <h3>2. Theo d√µi thanh to√°n</h3>
        {df2_html}

        <table class='signature-table'>
            <tr class='signature-header'>
                <th colspan='3'>KSG / Head Office</th>
                <th colspan='3'>C√¥ng ty, D·ª± √°n / Company, Project</th>
            </tr>
            <tr>
                <th class="signature-title">Gi√°m ƒë·ªëc (HO)</th>
                <th class="signature-title">K·∫ø to√°n tr∆∞·ªüng (HO)</th>
                <th class="signature-title">Ng∆∞·ªùi ki·ªÉm (HO)</th>
                <th class="signature-title">Ng∆∞·ªùi duy·ªát (CTY/DA)</th>
                <th class="signature-title">Ng∆∞·ªùi ki·ªÉm (CTY/DA)</th>
                <th class="signature-title">Ng∆∞·ªùi ƒë·ªÅ ngh·ªã (CTY/DA)</th>
            </tr>
            <!-- H√†ng Ch·ªØ K√Ω (G·ªìm kho·∫£ng tr·ªëng k√Ω, t√™n v√† ng√†y - T√™n v√† Ng√†y ƒë∆∞·ª£c cƒÉn d∆∞·ªõi) -->
            <tr class="signature-content-row">
                <td style="vertical-align: bottom;">
                    <div style="height: 60px;"></div> <!-- Kho·∫£ng tr·ªëng cho ch·ªØ k√Ω -->
                    <div class="signature-name">({giam_doc or ' '})</div>
                    <div class="signature-date">Ng√†y: </div>
                </td>
                <td style="vertical-align: bottom;">
                    <div style="height: 60px;"></div> <!-- Kho·∫£ng tr·ªëng cho ch·ªØ k√Ω -->
                    <div class="signature-name">({ke_toan or ' '})</div>
                    <div class="signature-date">Ng√†y: </div>
                </td>
                <td style="vertical-align: bottom;">
                    <div style="height: 60px;"></div> <!-- Kho·∫£ng tr·ªëng cho ch·ªØ k√Ω -->
                    <div class="signature-name">({nguoi_kiemtra2 or ' '})</div>
                    <div class="signature-date">Ng√†y: </div>
                </td>
                <td style="vertical-align: bottom;">
                    <div style="height: 60px;"></div> <!-- Kho·∫£ng tr·ªëng cho ch·ªØ k√Ω -->
                    <div class="signature-name">({nguoi_duyet1 or ' '})</div>
                    <div class="signature-date">Ng√†y: </div>
                </td>
                <td style="vertical-align: bottom;">
                    <div style="height: 60px;"></div> <!-- Kho·∫£ng tr·ªëng cho ch·ªØ k√Ω -->
                    <div class="signature-name">({nguoi_kiemtra1 or ' '})</div>
                    <div class="signature-date">Ng√†y: </div>
                </td>
                <td style="vertical-align: bottom;">
                    <div style="height: 60px;"></div> <!-- Kho·∫£ng tr·ªëng cho ch·ªØ k√Ω -->
                    <div class="signature-name">({nguoi_lap or ' '})</div>
                    <div class="signature-date">Ng√†y: </div>
                </td>
            </tr>
        </table>
        
        <div style="margin-top: 20px; font-size: 10px; text-align: center;">Phi·∫øu ƒë·ªÅ ngh·ªã thanh to√°n - T·ª± ƒë·ªông t·∫°o b·ªüi Streamlit App</div>
        
    </body>
    </html>
    """
    return html

def create_pdf_from_html(html_content):
    """S·ª≠ d·ª•ng JavaScript ƒë·ªÉ m·ªü tab m·ªõi v√† k√≠ch ho·∫°t l·ªánh in-to-PDF c·ªßa tr√¨nh duy·ªát."""
    
    # 1. Chu·∫©n b·ªã n·ªôi dung HTML ƒë√£ ƒë∆∞·ª£c escape.
    escaped_html = html_content.replace('`', '\\`').replace('$', '\\$')
    
    # 2. T·∫°o m√£ JS b·∫±ng f-string, ch√®n n·ªôi dung ƒë√£ escape.
    # K√≠ch ho·∫°t JavaScript ƒë·ªÉ m·ªü c·ª≠a s·ªï m·ªõi v√† g·ªçi l·ªánh in
    js_code = f"""
    <script>
        // N·ªôi dung HTML ƒë∆∞·ª£c ch√®n v√†o template literal
        const htmlContent = `{escaped_html}`;
        
        // ƒê·ªÉ s·ª≠ d·ª•ng {{ v√† }} b√™n trong f-string, c·∫ßn ph·∫£i double-brace ch√∫ng
        const blob = new Blob([htmlContent], {{type: 'text/html;charset=utf-8'}});
        const url = URL.createObjectURL(blob);
        
        // M·ªü c·ª≠a s·ªï m·ªõi
        const newWindow = window.open(url, '_blank');
        
        // K√≠ch ho·∫°t l·ªánh in sau khi c·ª≠a s·ªï ƒë∆∞·ª£c t·∫£i
        if (newWindow) {{
            newWindow.onload = () => {{
                newWindow.print();
            }};
        }}
    </script>
    """
    
    # Nh√∫ng JavaScript v√†o Streamlit
    st.components.v1.html(js_code, height=0)
    st.info("üí° **L∆∞u √Ω:** Tr√¨nh duy·ªát s·∫Ω m·ªü m·ªôt tab m·ªõi v√† hi·ªÉn th·ªã h·ªôp tho·∫°i in. Vui l√≤ng ch·ªçn **'L∆∞u d∆∞·ªõi d·∫°ng PDF'** (Save as PDF) v√† ch·ªçn t√πy ch·ªçn **'Fit to page'** ho·∫∑c **'Scale'** (T·ª∑ l·ªá) th·∫•p h∆°n 100% trong c√†i ƒë·∫∑t in c·ªßa tr√¨nh duy·ªát n·∫øu n·ªôi dung v·∫´n b·ªã tr√†n.")


col_preview, col_html_download, col_pdf_export = st.columns(3)

with col_preview:
    if st.button("üëÅÔ∏è Xem tr∆∞·ªõc HTML"):
        st.components.v1.html(generate_html(), height=750, scrolling=True)

with col_html_download:
    html_content = generate_html()
    html_bytes = io.BytesIO(html_content.encode("utf-8"))
    st.download_button("‚¨áÔ∏è Xu·∫•t file HTML", data=html_bytes, file_name="phieu_de_nghi.html", mime="text/html")

with col_pdf_export:
    # N√∫t xu·∫•t PDF
    if st.button("‚¨áÔ∏è Xu·∫•t file PDF"):
        create_pdf_from_html(generate_html())

# ============================================================
# RESET APP
# ============================================================
if st.button("üßπ X√≥a t·∫•t c·∫£ d·ªØ li·ªáu"):
    st.session_state.table1 = []
    st.session_state.table2 = []
    safe_rerun()
